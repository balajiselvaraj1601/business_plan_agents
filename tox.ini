# tox configuration for a Python project without Makefile

[tox]
envlist = clean, clean_all, sync, py310, py311, lint, type, coverage, coveragefull, smoketest, precommit, ci
isolated_build = true
skip_missing_interpreters = true
requires =
    tox-uv>=1.0

[testenv:clean]
description = Delete all compiled Python files and cache directories
skip_install = true
deps = 
commands =
    python -c "import os, shutil; [os.remove(os.path.join(root, f)) for root, dirs, files in os.walk('.') for f in files if f.endswith(('.pyc', '.pyo')) and '.venv' not in root]; [shutil.rmtree(d, ignore_errors=True) for d in ['__pycache__','htmlcov','.mypy_cache','.pytest_cache','.ruff_cache','build','SOAR.egg-info'] if os.path.exists(d)]; print('Clean complete')"

[testenv:clean_all]
description = Delete all project log and output directories
skip_install = true
deps =
commands =
    tox -e clean
    python -c "import shutil, os; [shutil.rmtree(d, ignore_errors=True) for d in ['wandb','lightning_logs','outputs'] if os.path.exists(d)]; print('Clean_all complete')"

[testenv:sync]
description = Sync uv environment dependencies
skip_install = true
deps =
allowlist_externals =
    bash
commands =
    bash -c "if [ ! -d .venv ]; then uv venv --python 3.11; fi"
    uv sync

[testenv]
description = Run the test suite
skip_install = false
deps =
    pytest
    pytest-cov
    coverage
commands =
    pytest --cov --cov-report=term-missing
    coverage report -m

[testenv:coveragefull]
description = Run all test cases (slow)
skip_install = false
deps =
    pytest
    pytest-cov
    coverage
commands =
    pytest --cov --cov-report=term-missing -m "slow"
    coverage report -m

[testenv:lint]
description = Run Ruff, Black, and isort checks
skip_install = true
deps =
    ruff
    black
    isort
commands =
    ruff check .
    black --check .
    isort --check-only .

[testenv:type]
description = Run mypy type checks
skip_install = true
deps =
    mypy
commands =
    mypy src

[testenv:smoketest]
description = Run slow smoketests only
skip_install = false
deps =
commands =
    pytest -m "slow" -v

[testenv:precommit]
description = Run pre-commit hooks
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run --all-files

[testenv:ci]
description = Run the full CI pipeline and apply fixes
skip_install = false
deps =
    pytest
    pytest-cov
    coverage
    ruff
    black
    isort
    mypy
    pre-commit
commands =
    ruff check . --fix
    black .
    isort .
    mypy --explicit-package-bases src
    pre-commit run --all-files
    pytest --cov --cov-report=term-missing -m "not slow"
    coverage report -m

[gh-actions]
python =
    3.10: py310, lint, type, coverage
    3.11: py311, lint, type, coverage
